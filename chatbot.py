import json
import spacy

# T·∫£i m√¥ h√¨nh spaCy ti·∫øng Anh
nlp = spacy.load("en_core_web_sm")

# H√†m t·∫£i d·ªØ li·ªáu l·ªãch s·ª≠ t·ª´ file JSON
def load_history_data(file_name="lich_su_partial.json"):
    try:
        with open(file_name, "r", encoding="utf-8") as f:
            history_data = json.load(f)
        return history_data
    except FileNotFoundError:
        print("File d·ªØ li·ªáu l·ªãch s·ª≠ kh√¥ng t·ªìn t·∫°i.")
        return {}

# H√†m nh·∫≠n di·ªán th·ª±c th·ªÉ trong c√¢u h·ªèi
def extract_entity_from_question(question):
    doc = nlp(question)
    entities = []
    for ent in doc.ents:
        # L·∫•y nh·ªØng th·ª±c th·ªÉ c√≥ th·ªÉ l√† t√™n ng∆∞·ªùi
        if ent.label_ in ["PERSON"]:
            entities.append(ent.text)
    return entities

# H√†m tr·∫£ l·ªùi c√¢u h·ªèi d·ª±a tr√™n d·ªØ li·ªáu l·ªãch s·ª≠
def answer_question(question, history_data):
    entities = extract_entity_from_question(question)
    
    if not entities:
        return "Xin l·ªói, t√¥i kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c t√™n ng∆∞·ªùi trong c√¢u h·ªèi."

    for entity in entities:
        # Ki·ªÉm tra t√™n th·ª±c th·ªÉ c√≥ trong d·ªØ li·ªáu l·ªãch s·ª≠ kh√¥ng
        if entity in history_data:
            return history_data[entity]
    
    return "Xin l·ªói, t√¥i ch∆∞a c√≥ th√¥ng tin v·ªÅ c√¢u h·ªèi n√†y."

# H√†m ch√≠nh chatbot
def main():
    print("ü§ñ Chatbot L·ªãch S·ª≠ Vi·ªát Nam (d√πng spaCy) - G√µ 'tho√°t' ƒë·ªÉ k·∫øt th√∫c.")
    history_data = load_history_data()

    while True:
        question = input("B·∫°n: ")
        
        if question.lower() == 'tho√°t':
            print("Bot: T·∫°m bi·ªát!")
            break

        # Tr·∫£ l·ªùi c√¢u h·ªèi d·ª±a tr√™n d·ªØ li·ªáu l·ªãch s·ª≠
        answer = answer_question(question, history_data)
        print(f"Bot: {answer}")

# Ch·∫°y chatbot
if __name__ == "__main__":
    main()
